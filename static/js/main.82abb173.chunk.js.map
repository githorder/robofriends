{"version":3,"sources":["components/Card.jsx","components/CardList.jsx","components/SearchBox/SearchBox.jsx","components/Header/Header.jsx","components/Loading.jsx","components/Scroll/Scroll.jsx","components/ErrorPage.jsx","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["Card","name","id","email","className","src","alt","CardList","robots","map","robot","SearchBox","SearchChange","onChange","type","placeholder","Header","Loading","SpinnerCircular","color","Scroll","children","ErrorPage","ErrorBoundary","props","state","hasError","err","errInfo","this","setState","Component","App","onSearchChange","event","searchField","target","value","failedToFetch","fetch","then","response","json","users","catch","filteredRobots","length","filter","toLocaleLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"iRAgBeA,EAdF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACxB,OACE,sBAAKC,UAAU,2EAAf,UACE,qBACEA,UAAU,YACVC,IAAG,+BAA0BH,EAA1B,gBACHI,IAAI,eAEN,oBAAIF,UAAU,KAAd,SAAoBH,IACpB,mBAAGG,UAAU,OAAb,SAAqBD,QCUZI,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,qBAAKJ,UAAU,gCAAf,SACGI,EAAOC,KAAI,SAACC,GACX,OACE,cAAC,EAAD,CAEET,KAAMS,EAAMT,KACZC,GAAIQ,EAAMR,GACVC,MAAOO,EAAMP,OAHRO,EAAMR,UCKRS,G,MAXG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,uBACER,UAAU,2CACVS,SAAUD,EACVE,KAAK,SACLC,YAAY,oBCFHC,G,MAJA,WACb,OAAO,oBAAIZ,UAAU,iCAAd,2B,QCOMa,EATC,WACd,OACE,sBAAKb,UAAU,KAAf,UACE,oBAAIA,UAAU,iCAAd,qBACA,cAACc,EAAA,EAAD,CAAiBC,MAAM,gBCCdC,G,MAJA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OAAO,qBAAKjB,UAAU,4BAAf,SAA4CiB,MCCtCC,EAJG,WAChB,OAAO,oBAAIlB,UAAU,gBAAd,mCCCYmB,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,UAAU,GAJK,E,qDAQnB,SAAkBC,EAAKC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAOG,KAAKJ,MAAMC,SAAW,cAAC,EAAD,IAAgBG,KAAKL,MAAMH,a,GAdjBU,aCMtBC,E,kDACnB,aAAe,IAAD,8BACZ,gBASFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAR1C,EAAKZ,MAAQ,CACXjB,OAAQ,GACR2B,YAAa,GACbG,eAAe,GANL,E,qDAcd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKb,SAAS,CAAEtB,OAAQmC,OACxCC,OAAM,kBAAM,EAAKd,SAAS,CAAEQ,eAAe,S,oBAGhD,WACE,MAA+CT,KAAKJ,MAA5CjB,EAAR,EAAQA,OAAQ2B,EAAhB,EAAgBA,YAAaG,EAA7B,EAA6BA,cACvBO,EAAiBrC,EAAOsC,OAC1BtC,EAAOuC,QAAO,SAACrC,GAAD,OACZA,EAAMT,KACH+C,oBACAC,SAASd,EAAYa,wBAE1B,GAEJ,OAAKxC,EAAOsC,QAAWR,EAEZA,EACF,cAAC,EAAD,IAGL,sBAAKlC,UAAU,KAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWQ,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzB,OAAQqC,WAVnB,cAAC,EAAD,Q,GAjCoBd,aCFjCmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.82abb173.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, id, email }) => {\n  return (\n    <div className=\"shadow-4 mw5 dib bg-light-blue br3 pa1 pa4-ns ma2 ba b--black-10 tc grow\">\n      <img\n        className=\"h4 w4 pa2\"\n        src={`https://robohash.org/${id}.png?200x200`}\n        alt=\"robot-card\"\n      />\n      <h2 className=\"f5\">{name}</h2>\n      <p className=\"gray\">{email}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  return (\n    <div className=\"flex flex-wrap justify-center\">\n      {robots.map((robot) => {\n        return (\n          <Card\n            key={robot.id}\n            name={robot.name}\n            id={robot.id}\n            email={robot.email}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from 'react';\n\nimport './SearchBox.styles.css';\n\nconst SearchBox = ({ SearchChange }) => {\n  return (\n    <input\n      className=\"pv3 mb3 input-reset ba b--washed-blue tc\"\n      onChange={SearchChange}\n      type=\"search\"\n      placeholder=\"search robots\"\n    />\n  );\n};\n\nexport default SearchBox;\n","import React from 'react';\n\nimport './Header.styles.css';\n\nconst Header = () => {\n  return <h1 className=\"ttu fw3 light-blue f1 lh-title\">robofriends</h1>;\n};\n\nexport default Header;\n","import React from 'react';\nimport { SpinnerCircular } from 'spinners-react';\n\nconst Loading = () => {\n  return (\n    <div className=\"tc\">\n      <h1 className=\"ttu fw3 light-blue f1 lh-title\">Loading</h1>\n      <SpinnerCircular color=\"#0080ff\" />\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from 'react';\n\nimport './Scroll.styles.css';\n\nconst Scroll = ({ children }) => {\n  return <div className=\"scrollBar overflow-scroll\">{children}</div>;\n};\n\nexport default Scroll;\n","import React from 'react';\n\nconst ErrorPage = () => {\n  return <h1 className=\"tc light-blue\">Something went wrong</h1>;\n};\n\nexport default ErrorPage;\n","import React, { Component } from 'react';\n\nimport ErrorPage from './ErrorPage';\n\nexport default class ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentDidCatch(err, errInfo) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    return this.state.hasError ? <ErrorPage /> : this.props.children;\n  }\n}\n","import React, { Component } from 'react';\n\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox/SearchBox';\nimport Header from '../components/Header/Header.jsx';\nimport Loading from '../components/Loading';\nimport Scroll from '../components/Scroll/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport ErrorPage from '../components/ErrorPage';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      robots: [],\n      searchField: '',\n      failedToFetch: false,\n    };\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }))\n      .catch(() => this.setState({ failedToFetch: true }));\n  }\n\n  render() {\n    const { robots, searchField, failedToFetch } = this.state;\n    const filteredRobots = robots.length\n      ? robots.filter((robot) =>\n          robot.name\n            .toLocaleLowerCase()\n            .includes(searchField.toLocaleLowerCase())\n        )\n      : [];\n\n    if (!robots.length && !failedToFetch) {\n      return <Loading />;\n    } else if (failedToFetch) {\n      return <ErrorPage />;\n    } else {\n      return (\n        <div className=\"tc\">\n          <Header />\n          <SearchBox SearchChange={this.onSearchChange} />\n          <Scroll>\n            <ErrorBoundary>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundary>\n          </Scroll>\n        </div>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport 'tachyons';\n\nimport App from './containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}